(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"./src/js/main.js":[function(require,module,exports){
'use strict';

var game = new Phaser.Game(800, 600, Phaser.AUTO, 'roosevelt-game');

window.Utils = require('./utils');
window.playerState = {currentLevel: 'Game'};

game.state.add('Boot', require('./states/boot'));
game.state.add('Splash', require('./states/splash'));
game.state.add('Preloader', require('./states/preloader'));
game.state.add('Menu', require('./states/menu'));
game.state.add('Game', require('./states/game'));

game.state.start('Boot');

},{"./states/boot":"/Users/moret/dev/roosevelt/src/js/states/boot.js","./states/game":"/Users/moret/dev/roosevelt/src/js/states/game.js","./states/menu":"/Users/moret/dev/roosevelt/src/js/states/menu.js","./states/preloader":"/Users/moret/dev/roosevelt/src/js/states/preloader.js","./states/splash":"/Users/moret/dev/roosevelt/src/js/states/splash.js","./utils":"/Users/moret/dev/roosevelt/src/js/utils.js"}],"/Users/moret/dev/roosevelt/src/js/entities/player.js":[function(require,module,exports){
var Player = function (game, x, y) {
  Phaser.Sprite.call(this, game, x, y, 'chibi', 'idle-01.png');
  game.add.existing(this);

  this.attackAnimation = this.animations.add('attack', [
    'attack-01.png',
    'attack-02.png',
    'attack-03.png',
    'attack-05.png',
    'attack-04.png',
    'attack-01.png'
  ], 12, false, false);
  this.attackAnimation.onComplete.add(this.attackFinished, this);

  this.walkingAnimation = this.animations.add('walk', [
    'walk-01.png',
    'walk-02.png',
    'walk-03.png',
    'walk-04.png'
  ], 8, true, false);

  this.animations.add('idle', [
    'idle-01.png',
    'idle-02.png'
  ], 1, true, false);
  this.animations.play('idle');
}

Player.prototype = Object.create(Phaser.Sprite.prototype);
Player.prototype.constructor = Player;

/**
 * Automatically called by World.update
 */
Player.prototype.update = function() {
  if (this.willAttack) {
    this.animations.play('attack');
    this.isAttacking = true;
  }

  if (!this.isAttacking) {
    if (this.rightKey.isDown || this.leftKey.isDown) {
      this.animations.play('walk');
    } else {
      this.animations.play('idle');
    }
  }

  this.willAttack = false;
};

Player.prototype.attackFinished = function() {
  this.animations.play('idle');
  this.isAttacking = false;
};

Player.prototype.onAttackInput = function () {
  this.willAttack = true;
};

module.exports = Player;

},{}],"/Users/moret/dev/roosevelt/src/js/states/boot.js":[function(require,module,exports){
var Boot = function () {};

Boot.prototype = {
  preload: function () {
    this.load.image('preloader', 'assets/preloader.gif');
  },

  create: function () {
    this.game.input.maxPointers = 1;

    if (this.game.device.desktop) {
      this.game.stage.scale.pageAlignHorizontally = true;
    } else {
      this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
      this.game.scale.minWidth = 480;
      this.game.scale.minHeight = 260;
      this.game.scale.maxWidth = 640;
      this.game.scale.maxHeight = 480;
      this.game.scale.forceLandscape = true;
      this.game.scale.pageAlignHorizontally = true;
      this.game.scale.setScreenSize(true);
    }

    this.game.state.start('Preloader');
  }
};

module.exports = Boot;

},{}],"/Users/moret/dev/roosevelt/src/js/states/game.js":[function(require,module,exports){
var Player = require('../entities/player');

var Game = function () {
  this.testentity = null;
};

Game.prototype = {
  create: function () {
    var x = (this.game.width / 2) - 100;
    var y = (this.game.height / 2) - 50;

    this.testentity = new Player(this.game, x, y);
    this.testentity.anchor.setTo(0.5, 0.5);

    var xKey = this.input.keyboard.addKey(Phaser.Keyboard.X);
    xKey.onDown.add(this.testentity.onAttackInput, this.testentity);

    this.testentity.rightKey = this.input.keyboard.addKey(Phaser.Keyboard.RIGHT);
    this.testentity.leftKey = this.input.keyboard.addKey(Phaser.Keyboard.LEFT);

    var escKey = this.input.keyboard.addKey(Phaser.Keyboard.ESC);
    escKey.onDown.add(this.onEscInput, this);
  },

  update: function () {
  },

  onEscInput: function () {
    this.game.state.start('Menu');
  }
};

module.exports = Game;

},{"../entities/player":"/Users/moret/dev/roosevelt/src/js/entities/player.js"}],"/Users/moret/dev/roosevelt/src/js/states/menu.js":[function(require,module,exports){
var Menu = function () {
  this.text = null;
};

Menu.prototype = {
  create: function () {
    var x = this.game.width / 2;
    var y = this.game.height / 2;

    var style = { font: '3em "Lucida Console", Monaco, monospace', fill: '#ffffff' };
    this.text = this.add.text(x - 300, y - 200, 'esc        start/stop\nx          attack\nleft/right walk', style);

    var escKey = this.input.keyboard.addKey(Phaser.Keyboard.ESC);
    escKey.onDown.add(this.onEscInput, this);
  },

  update: function () {
  },

  onEscInput: function () {
    this.game.state.start(playerState.currentLevel);
  }
};

module.exports = Menu;

},{}],"/Users/moret/dev/roosevelt/src/js/states/preloader.js":[function(require,module,exports){
var Preloader = function (game) {
  this.asset = null;
  this.ready = false;
};

Preloader.prototype = {
  preload: function () {
    this.asset = this.add.sprite(320, 240, 'preloader');
    this.asset.anchor.setTo(0.5, 0.5);

    this.load.onLoadComplete.addOnce(this.onLoadComplete, this);
    this.load.setPreloadSprite(this.asset);
    this.load.json('sprites_atlas', 'assets/sprites.json');
    this.load.atlasJSONHash('chibi', 'assets/sprites.png', 'assets/sprites.json');
  },

  create: function () {
    this.asset.cropEnabled = false;
  },

  update: function () {
    if (!!this.ready) {
      this.game.state.start('Menu');
    }
  },

  onLoadComplete: function () {
    this.ready = true;
  }
};

module.exports = Preloader;

},{}],"/Users/moret/dev/roosevelt/src/js/states/splash.js":[function(require,module,exports){
var Splash = function () {
};

module.exports = Splash;

Splash.prototype = {
  create: function () {
  }
};
},{}],"/Users/moret/dev/roosevelt/src/js/utils.js":[function(require,module,exports){
var Utils = {
    containsObject: function(obj, list) {
        var i;
        for (i = 0; i < list.length; i++) {
            if (list[i] === obj) {
                return true;
            }
        }

        return false;
    }
};

module.exports = Utils;
},{}]},{},["./src/js/main.js"])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
